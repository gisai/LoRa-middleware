var express = require('express');
var router = express.Router();
const axios = require('axios').default;

var OrionAddress = "http://localhost:1026/v2/entities";


//ATENTION: We need to modify this template according to the data generated by the sensor
var template = {
    "Battery": {
        "value": 23,
        "type": "Integer"
    },
    "Flags": {
        "value": 8,
        "type": "Integer"
    },
    "Light": {
        "value": 110,
        "type": "Integer"
    }
};

/* GET home page. */
router.get('/', function(req, res, next) {
    res.render('index', { title: 'Express' });
});

router.get('/lora', function(req, res, next) {
    console.log("Get triggered");
    res.json({ result: "ok" });
});

router.post('/lora', function(req, res, next) {

    console.log("POST triggered");
    console.log(req.body);

    if (req.query.event != 'up') {
        console.log("Unsupported event: " + req.params.event);
        res.json({ result: "Unsupported event" });
    } else { //ATENTION: need to be modified
        var objectJSON = JSON.parse(req.body.objectJSON);
        template.Battery.value = objectJSON.Battery;
        template.Flags.value = objectJSON.Flags;
        template.Light.value = objectJSON.Light;

        deviceName = req.body.deviceName;
        //deviceName = "device2";

        deviceExists(deviceName).then(result => {
            console.log(result); //Result is true if devices if already regsitered in Orion

            if (result) {
                console.log("device exists, updating...");

                axios.post(OrionAddress + '/' + deviceName + '/attrs', template)
                    .then(function(response) {
                        console.log(response.data);
                        res.json({ message: "sensor: " + deviceName + " updated", result: "ok" });
                    });
            } else {
                console.log("device not exists in Orion, registering ...");
                //device not exists in Orion.
                //register device in Orion:  curl localhost:1026/v2/entities -s -S -H 'Content-Type: application/json'
                var registerMessage = Object.assign({}, template); //we clone the template object to add id and type 
                registerMessage.id = deviceName;
                registerMessage.type = "Lora";

                axios.post(OrionAddress, registerMessage)
                    .then(function(response) {
                        console.log(response.data);
                        res.json({ message: "sensor: " + deviceName + " registered and updated", result: "ok" });
                    });
            }
        });
    }

});

async function deviceExists(deviceName) {
    try {
        //We check v2/entities/deviceName if throws a notfound message.
        const response = await axios.get(OrionAddress + '/' + deviceName);
        console.log(response.data);
    } catch (error) {   
    console.error(error);     
        if (error.response.data && error.response.data.error == "NotFound") {
			console.error("Response 404 no device found in Orion");
        	return false;
        }
    }
    return true;
}


module.exports = router;